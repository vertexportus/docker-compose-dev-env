#!/usr/bin/env bash

exec_command() {
    cmd=$1
    case "$cmd" in
    "new")
        if [[ -z "$2" ]]; then echo '`new` command requires a project name'; exit 1; fi
        docker run --rm --user $UID:$UID --interactive --tty --volume $ENV_PATH/src:/app composer /bin/bash -c "composer global require laravel/installer && composer create-project --prefer-dist laravel/laravel $2"
        printf "$2/\n" >> "$ENV_PATH/src/.gitignore"
        ;;
    "key:generate")
        local path="$ENV_PATH/$PHP_APP_PATH"
        echo 'APP_KEY=' > "$path/.env"
        docker-compose exec --user=$UID php php artisan key:generate
        local key=$(cat "$path/.env" | sed 's/APP_KEY=//g')
        rm "$path/.env"
        echo $key
        sed -i "s%APP_KEY=.*%APP_KEY="$key"%g" "$ENV_PATH/$PHP_DOTENV"
        ;;
    *)
        docker-compose exec --user=$UID php php artisan $*
        ;;
    esac
}

if [[ -n $ENV_HELP ]]; then
    printf "\e[36mruns 'php artisan' inside the 'php' container: \n  > \e[36;1m$ENV_COMMAND laravel <commands>\e[0m\n"
    printf "        -\e[36m creates new laravel project: \n  > \e[36;1m$ENV_COMMAND laravel new <project>\e[0m\n"
else
    cd $ENV_PATH
    exec_command $*
    printf "\n"
fi

